base-font-size ?= 16px

rupture = {
  mobile-cutoff: 400px
  desktop-cutoff: 1050px
  enable-em-breakpoints: false
  base-font-size: base-font-size
  anti-overlap: false
  retina-queries: '(min-resolution: 1.5dppx)' '(-webkit-min-device-pixel-ratio: 1.5)' '(min--moz-device-pixel-ratio: 1.5)' '(min-resolution: 144dpi)'
}

rupture.scale = 0 (rupture.mobile-cutoff) 600px 800px (rupture.desktop-cutoff)

-convert-to(to-unit, value, context = rupture.base-font-size)
  from-unit = unit(value)
  return value if to-unit is from-unit
  if to-unit in ('em' 'rem')
    return value if from-unit in ('em' 'rem')
    return unit((value / context), to-unit)
  if to-unit is 'px'
    return unit((value * context), 'px')

-on-scale(n)
  return unit(n) is ''

-larger-than-scale(n)
  return (n > (length(rupture.scale) - 1)) and -on-scale(n)

-is-zero(n)
  return n is 0

-overlap-shift(anti-overlap, n)
  shift-unit = unit(n)
  anti-overlap = 0px unless anti-overlap
  anti-overlap = 1px if anti-overlap is true
  if length(anti-overlap) is 1
    return -convert-to(shift-unit, anti-overlap)
  for val in anti-overlap
    return val if unit(val) is shift-unit

-adjust-overlap(anti-overlap, n, side = 'min')
  -shift = -overlap-shift(anti-overlap, n)
  if (side is 'min' and -shift > 0) or (side is 'max' and -shift < 0)
    n = n + -shift
  return n
    
-is-positive(n)
  return n >= 0
// +between(min, max)
// usage (scale can be mixed with custom values):
//   - +between(1, 3) scale:scale
//   - +between(0, 3) 0 width:scale
//   - +between(200px, 500px) custom:custom
//   - +between(0, 300px) 0 width:custom
//   - +between(1, 300px) scale:custom
//   - +between(200px, 4) custom:scale

between(min, max, anti-overlap = rupture.anti-overlap, retina = false)
  -min = rupture.scale[min - 1] unless -is-zero(min) or (not -on-scale(min))
  -max = rupture.scale[max] unless not -on-scale(max)
  -min ?= min
  -max ?= max

  condition = 'only screen'
  unless -min is 0
    -min = -convert-to('em', -min) if rupture.enable-em-breakpoints
    -min = -adjust-overlap(anti-overlap, -min, side: 'min')
    condition = condition + ' and (min-width: %s)' % (-min)
  unless -larger-than-scale(max)
    -max = -convert-to('em', -max) if rupture.enable-em-breakpoints
    -max = -adjust-overlap(anti-overlap, -max, side: 'max')
    condition = condition + ' and (max-width: %s)' % (-max)
  if retina
    conditions = ()
    for query in rupture.retina-queries
      push(conditions, condition + ' and ' + query)
    condition = join(', ', conditions)
  @media condition
    {block}

at(scale-point, anti-overlap = rupture.anti-overlap, retina = false)
  +between(scale-point, scale-point, anti-overlap, retina)
    {block}

from(scale-point, anti-overlap = rupture.anti-overlap, retina = false)
  +between(scale-point, length(rupture.scale), anti-overlap, retina)
    {block}

above = from

to(scale-point, anti-overlap = rupture.anti-overlap, retina = false)
  +between(1, scale-point, anti-overlap, retina)
    {block}

below = to

mobile(anti-overlap = rupture.anti-overlap, retina = false)
  +below(rupture.mobile-cutoff, anti-overlap, retina)
    {block}

tablet(anti-overlap = rupture.anti-overlap, retina = false)
  +between(rupture.mobile-cutoff, rupture.desktop-cutoff, anti-overlap, retina)
    {block}

desktop(anti-overlap = rupture.anti-overlap, retina = false)
  +above(rupture.desktop-cutoff, anti-overlap, retina)
    {block}

retina()
  condition = join(', ', rupture.retina-queries)
  @media condition
    {block}
